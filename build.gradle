buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
    }
}

plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


bootJar {
    // We need the basename or CodeBuild uses the CodeCommit repo name.
    // TODO: baseName is deprecated: check what to use instead.
    baseName = 'java-simple-rest-demo-app'
    version = '0.1.1'
}

repositories {
    mavenCentral()
}

// I would like to use 1.10 or 1.11, but there is no Alpine for 1.10 or 1.11 yet.
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext{
    // Dependencies.
    // Honor Spring Boot 2.1.2 versions:
    // https://docs.spring.io/spring-boot/docs/2.1.2.RELEASE/reference/html/appendix-dependency-versions.html
    // Exception here. Spring Boot uses JUnit 4.12, but let's use latest JUnit5.
    // See: https://dzone.com/articles/spring-boot-2-with-junit-5-and-mockito-2-for-unit
    groovyVersion = '2.5.5'
    junitVersion = '5.3.0'
    mockitJunitJupiterVersion = '2.18.3'
    jsonPathVersion = '2.4.0'
    commonsCodecVersion = '1.11'
    gsonVersion = '2.8.5'
}


dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.codehaus.groovy:groovy-all:$rootProject.ext.groovyVersion")    
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit.junit'
        exclude group: 'com.vaadin.external.google'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testImplementation("org.mockito:mockito-core:2.+")
    testImplementation("org.mockito:mockito-junit-jupiter:$mockitJunitJupiterVersion")
    testImplementation("com.jayway.jsonpath:json-path:$jsonPathVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")       
    testImplementation("com.jayway.jsonpath:json-path:$jsonPathVersion")
    
}


test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}
